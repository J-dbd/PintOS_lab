Kernel command line: -q -f put sm-full run sm-full
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  117,760,000 loops/s.
hd0:0: detected 313 sector (156 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'sm-full' into the file system...
Executing 'sm-full':
Page fault at 0x4747efff: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=800421c457
 cr2=000000004747efff error=               2
rax 000000004747efff rbx 0000000000000000 rcx 000000800421c3d0 rdx 00000000000000cc
rsp 000000800423fc60 rbp 000000800423fca0 rsi 0000000000000001 rdi 000000800423e000
rip 000000800421c457 r8 0000000000003000  r9 0000000000000001 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x800421897a 0x800421d1f7 0x800421d376 0x80042097a5 0x8004209bc3 0x800421c32a 0x800421bfd6 0x8004207934.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 30 idle ticks, 37 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 81 reads, 242 writes
hd1:0: 107 reads, 0 writes
Console: 1705 characters output
Key